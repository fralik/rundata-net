image: ubuntu
# python:latest

# test:
#   script:
#   - apt-get update -qy
#   - apt-get install -y python-dev python-pip
#   - pip install -r requirements/local.txt
#   - python manage.py test

staging:
  # image per job
  # image: ubuntu
  type: deploy
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
    # Run ssh-agent inside the build environment
    - eval $(ssh-agent -s)
    ##
    ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    ## We're using tr to fix line endings which makes ed25519 keys work
    ## without extra base64 encoding.
    ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
    ##
    - echo "$SSH_TOKEN" | tr -d '\r' | ssh-add - > /dev/null

    ##
    ## Create the SSH directory and give it the right permissions
    ##
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

    ##
    ## Use ssh-keyscan to scan the keys of your private server.
    ## You can copy and repeat that command if you have
    ## more than one server to connect to.
    ##
    - ssh-keyscan $STAGING_SERVER -p $STAGING_PORT >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

  script:
    - echo Our connection is $STAGING_USER@$STAGING_SERVER -p $STAGING_PORT
    - ssh $STAGING_USER@$STAGING_SERVER -p $STAGING_PORT
    - git pull
